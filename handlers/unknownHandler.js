module.exports = function (bot) {
  const faqResponses = {
    faq_1: 'üëâ Cliquez sur "Inscription" dans le menu principal.',
    faq_2: 'üëâ Il existe une version gratuite et une version premium.',
    faq_3: 'üëâ Dans la section "Modules" du menu.',
    faq_4: 'üëâ Inscrivez-vous via "Premium", puis vous recevrez l‚Äôacc√®s.',
    faq_5: 'üëâ Modules avanc√©s, ateliers, coaching, accompagnement, lives priv√©s.',
    faq_6: 'üëâ Oui, les deux groupes sont compl√©mentaires.',
    faq_7: 'üëâ Dans le canal Premium, vous pouvez poser vos questions.',
    faq_8: 'üëâ Les deux : modules enregistr√©s + lives r√©guliers.',
    faq_9: 'üëâ Oui, c‚Äôest 100% √† ton rythme.',
    faq_10: 'üëâ Cliquez sur "Premium" pour voir les options de paiement.'
  };

  const moreFaqResponses = {
    faq_11: 'üëâ Bien s√ªr ! Invite-les √† taper /start dans la conversation avec @RPA_academie_bot.',
    faq_12: 'üëâ Mtn mobile Money, Airtel mobile Money, carte visa.',
    faq_13: 'üëâ Oui, un certificat digital est remis.',
    faq_14: 'üëâ Acc√®s possible selon ton abonnement.',
    faq_15: 'üëâ Absolument, tout commence par les bases.',
    faq_16: 'üëâ Contacte-nous ici : https://t.me/RichPreneurAcademie',
    faq_17: 'üëâ Oui, mais contacte notre √©quipe pour √ßa.',
    faq_18: 'üëâ Environ 1 √† 3 mois selon ton rythme.',
    faq_19: 'üëâ Oui, tout fonctionne depuis ton t√©l√©phone.',
    faq_20: 'üëâ Non, tout est 100% en ligne.'
  };

  // Pour suivre temporairement les questions pos√©es par chatId (en m√©moire simple)
  const askedQuestions = {};

  // Message d'accueil personnalis√© au /start
  bot.command('start', (ctx) => {
    const chatId = ctx.chat.id;
    askedQuestions[chatId] = new Set(); // reset session

    ctx.reply(
      `üëã Bonjour et bienvenue √† la Rich Preneur Acad√©mie !\n\n` +
      `Je suis ton assistant virtuel.\n` +
      `Tu peux taper /faq pour acc√©der aux questions fr√©quentes.\n` +
      `Si tu souhaites parler √† un humain, utilise /contact.\n\n` +
      `Que veux-tu faire ?`,
      {
        reply_markup: {
          keyboard: [
            [{ text: '/faq' }],
            [{ text: '/contact' }]
          ],
          resize_keyboard: true,
          one_time_keyboard: true
        }
      }
    );
  });

  // Commande contact vers le canal Telegram
  bot.command('contact', (ctx) => {
    ctx.reply(
      'üìû Tu veux parler √† un conseiller humain ?\n' +
      'Rejoins notre canal ici : https://t.me/RichpreneuracademieRPA'
    );
  });

  // Fonction pour envoyer le menu FAQ principal
  function sendFaqMenu(chatId) {
    bot.telegram.sendMessage(chatId, '‚ùì *Questions fr√©quentes ‚Äì Choisis une question :*', {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: '1Ô∏è‚É£ Comment m‚Äôinscrire ?', callback_data: 'faq_1' }],
          [{ text: '2Ô∏è‚É£ L‚Äôinscription est-elle payante ?', callback_data: 'faq_2' }],
          [{ text: '3Ô∏è‚É£ O√π trouver les modules gratuits ?', callback_data: 'faq_3' }],
          [{ text: '4Ô∏è‚É£ Acc√®s au canal premium ?', callback_data: 'faq_4' }],
          [{ text: '5Ô∏è‚É£ Que contient la version Premium ?', callback_data: 'faq_5' }],
          [{ text: '6Ô∏è‚É£ Dans les deux groupes ?', callback_data: 'faq_6' }],
          [{ text: '7Ô∏è‚É£ Contacter les formateurs ?', callback_data: 'faq_7' }],
          [{ text: '8Ô∏è‚É£ En direct ou en diff√©r√© ?', callback_data: 'faq_8' }],
          [{ text: '9Ô∏è‚É£ Avancer √† mon rythme ?', callback_data: 'faq_9' }],
          [{ text: 'üîü Comment payer ?', callback_data: 'faq_10' }],
          [{ text: 'Voir +10 questions ‚ûï', callback_data: 'faq_more' }],
          [{ text: 'Faire un mini quiz üéØ', callback_data: 'quiz_start' }]
        ]
      }
    });
  }

  // Commande /faq pour afficher le menu FAQ
  bot.command('faq', (ctx) => {
    const chatId = ctx.chat.id;
    askedQuestions[chatId] = new Set(); // reset session FAQ
    sendFaqMenu(chatId);
  });

  // Gestionnaire des callback_query (clic sur les boutons FAQ, quiz...)
  bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const data = query.data;

    // Initialisation si pas encore pr√©sent
    if (!askedQuestions[chatId]) askedQuestions[chatId] = new Set();

    // R√©ponse FAQ simple avec bouton retour au menu
    const faqBackButton = {
      reply_markup: {
        inline_keyboard: [[{ text: '‚¨ÖÔ∏è Retour aux questions fr√©quentes', callback_data: 'faq' }]]
      }
    };

    if (faqResponses[data]) {
      // Emp√™che r√©p√©tition de la m√™me question dans la session
      if (askedQuestions[chatId].has(data)) {
        await bot.telegram.sendMessage(chatId, '‚ÑπÔ∏è Tu as d√©j√† vu cette r√©ponse. Tu peux choisir une autre question.', faqBackButton);
      } else {
        askedQuestions[chatId].add(data);
        await bot.telegram.sendMessage(chatId, `üí¨ *R√©ponse :* ${faqResponses[data]}`, { parse_mode: 'Markdown', ...faqBackButton });
      }
    }
    else if (data === 'faq') {
      // Retour au menu FAQ principal
      await sendFaqMenu(chatId);
    }
    else if (data === 'faq_more') {
      await bot.telegram.sendMessage(chatId, '‚¨áÔ∏è *Autres questions fr√©quentes :*', {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '11Ô∏è‚É£ Recommander √† un ami ?', callback_data: 'faq_11' }],
            [{ text: '12Ô∏è‚É£ Moyens de paiement ?', callback_data: 'faq_12' }],
            [{ text: '13Ô∏è‚É£ Certificat fourni ?', callback_data: 'faq_13' }],
            [{ text: '14Ô∏è‚É£ Acc√®s aux anciens modules ?', callback_data: 'faq_14' }],
            [{ text: '15Ô∏è‚É£ Formation pour d√©butants ?', callback_data: 'faq_15' }],
            [{ text: '16Ô∏è‚É£ Support technique ?', callback_data: 'faq_16' }],
            [{ text: '17Ô∏è‚É£ Annulation abonnement ?', callback_data: 'faq_17' }],
            [{ text: '18Ô∏è‚É£ Dur√©e de la formation ?', callback_data: 'faq_18' }],
            [{ text: '19Ô∏è‚É£ Suivre via t√©l√©phone ?', callback_data: 'faq_19' }],
            [{ text: '20Ô∏è‚É£ Formation en pr√©sentiel ?', callback_data: 'faq_20' }],
            [{ text: '‚¨ÖÔ∏è Retour aux questions fr√©quentes', callback_data: 'faq' }]
          ]
        }
      });
    }
    else if (moreFaqResponses[data]) {
      if (askedQuestions[chatId].has(data)) {
        await bot.telegram.sendMessage(chatId, '‚ÑπÔ∏è Tu as d√©j√† vu cette r√©ponse. Choisis une autre question.', faqBackButton);
      } else {
        askedQuestions[chatId].add(data);
        await bot.telegram.sendMessage(chatId, `üí¨ *R√©ponse :* ${moreFaqResponses[data]}`, { parse_mode: 'Markdown', ...faqBackButton });
      }
    }
    // ===== MINI QUIZ INTERACTIF =====
    else if (data === 'quiz_start') {
      // D√©marrer quiz : 3 questions simples (exemple)
      askedQuestions[chatId] = new Set(); // Reset pour quiz
      await bot.telegram.sendMessage(chatId, 'üéØ Mini Quiz : Question 1\n' +
        'Comment t‚Äôinscrire ?\n\n' +
        'a) En cliquant sur "Inscription" dans le menu principal\n' +
        'b) En envoyant un email\n' +
        'c) En appelant le support',
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'a', callback_data: 'quiz_q1_a' }],
              [{ text: 'b', callback_data: 'quiz_q1_b' }],
              [{ text: 'c', callback_data: 'quiz_q1_c' }]
            ]
          }
        });
    }
    else if (data.startsWith('quiz_q1_')) {
      if (data === 'quiz_q1_a') {
        await bot.telegram.sendMessage(chatId, '‚úÖ Correct ! Passons √† la question 2.');
      } else {
        await bot.telegram.sendMessage(chatId, '‚ùå Ce n‚Äôest pas la bonne r√©ponse. R√©essayons la question 1.');
        return bot.answerCallbackQuery(query.id);
      }

      // Question 2
      await bot.telegram.sendMessage(chatId, 'üéØ Question 2\n' +
        'Est-ce que l‚Äôinscription est payante ?\n\n' +
        'a) Oui\n' +
        'b) Non',
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'a', callback_data: 'quiz_q2_a' }],
              [{ text: 'b', callback_data: 'quiz_q2_b' }]
            ]
          }
        });
    }
    else if (data.startsWith('quiz_q2_')) {
      if (data === 'quiz_q2_a') {
        await bot.telegram.sendMessage(chatId, '‚úÖ Correct ! Passons √† la derni√®re question.');
      } else {
        await bot.telegram.sendMessage(chatId, '‚ùå Ce n‚Äôest pas la bonne r√©ponse. R√©essayons la question 2.');
        return bot.answerCallbackQuery(query.id);
      }

      // Question 3
      await bot.telegram.sendMessage(chatId, 'üéØ Question 3\n' +
        'O√π trouver les modules gratuits ?\n\n' +
        'a) Dans la section "Modules" du menu\n' +
        'b) Dans un groupe Facebook\n' +
        'c) En envoyant un message priv√©',
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'a', callback_data: 'quiz_q3_a' }],
              [{ text: 'b', callback_data: 'quiz_q3_b' }],
              [{ text: 'c', callback_data: 'quiz_q3_c' }]
            ]
          }
        });
    }
    else if (data.startsWith('quiz_q3_')) {
      if (data === 'quiz_q3_a') {
        await bot.telegram.sendMessage(chatId, 'üéâ Bravo, tu as termin√© le quiz ! Tape /faq pour revenir au menu FAQ.');
      } else {
        await bot.telegram.sendMessage(chatId, '‚ùå Ce n‚Äôest pas la bonne r√©ponse. R√©essayons la question 3.');
        return bot.answerCallbackQuery(query.id);
      }
    }
    else {
      // R√©ponse par d√©faut aux messages non reconnus
      await bot.telegram.sendMessage(chatId, `ü§î Je n‚Äôai pas compris ta demande.\n\nTape /faq pour voir les questions fr√©quentes ou /contact pour parler √† un humain.`);
    }

    // Toujours r√©pondre √† la callback query pour ne pas afficher le "chargement"
    bot.answerCallbackQuery(query.id);
  });

  // Gestion des messages textes libres (hors commandes)
  bot.on('message', (ctx) => {
    const chatId = ctx.chat.id;
    const text = ctx.message.text;

    // Si ce n'est pas une commande connue, on guide l'utilisateur
    if (!text.startsWith('/')) {
      ctx.reply(`ü§î Je n‚Äôai pas compris ce message. Tape /faq pour les questions fr√©quentes ou /contact pour parler √† un humain.`);
    }
  });
};
